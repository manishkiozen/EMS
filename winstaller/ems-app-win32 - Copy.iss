; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "Ems App"
#define MyAppShortName "EmsApp"
#define MyAppLCShortName "emsapp"
#define MyAppVersion "1.0"
#define MyAppPublisher "kiozen technologies, LLC"
#define MyAppURL "http://kiozen.com/"
#define MyAppExeName "winstart-browser.bat"

#define MyAppIcon "web-trifecta-badge.ico"

#define NSSM "nssm.exe"
#define NSSM32 "nssm-x86.exe"
#define NSSM64 "nssm.exe"
#define NODE32 "node-v4.2.2-x86.msi"
#define NODE64 "node-v5.0.0-x64.msi"
#define NODE "node-v5.0.0-x64.msi"
#define IMAGEMAGIC "ImageMagick.exe"
#define USERPROFILE "C:\Users\Admin"


[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{97DA02F5-2E8C-4B96-BB42-61ED2BBF34DF}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName=C:\{#MyAppShortName}
DisableDirPage=yes
DefaultGroupName={#MyAppName}
DisableProgramGroupPage=yes
;LicenseFile={#USERPROFILE}\Downloads\LICENSE.txt
;InfoBeforeFile={#USERPROFILE}\Downloads\before.txt
;InfoAfterFile={#USERPROFILE}\Downloads\after.txt
OutputDir={#USERPROFILE}\Desktop\manish\05-11-15
OutputBaseFilename={#MyAppShortName}Installer32
SetupIconFile={#USERPROFILE}\Desktop\manish\05-11-15\winstaller\{#MyAppIcon}
Compression=lzma
SolidCompression=yes


[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"


[Files]
Source: "{#USERPROFILE}\Desktop\manish\05-11-15\winstaller\winstart-server.bat"; DestDir: "{app}"; Flags: ignoreversion
Source: "{#USERPROFILE}\Desktop\manish\05-11-15\winstaller\winstart-browser.bat"; DestDir: "{app}"; Flags: ignoreversion
Source: "{#USERPROFILE}\Desktop\manish\05-11-15\winstaller\msie-app.hta"; DestDir: "{app}"; Flags: ignoreversion
Source: "{#USERPROFILE}\Desktop\manish\05-11-15\winstaller\msie-app-secure.hta"; DestDir: "{app}"; Flags: ignoreversion
Source: "{#USERPROFILE}\Desktop\manish\05-11-15\winstaller\{#NODE64}"; DestDir: "{app}"; Flags: ignoreversion
Source: "{#USERPROFILE}\Desktop\manish\05-11-15\winstaller\{#NODE32}"; DestDir: "{app}"; Flags: ignoreversion
Source: "{#USERPROFILE}\Desktop\manish\05-11-15\winstaller\{#NSSM64}"; DestDir: "{app}"; Flags: ignoreversion
Source: "{#USERPROFILE}\Desktop\manish\05-11-15\winstaller\{#NSSM32}"; DestDir: "{app}"; Flags: ignoreversion
Source: "{#USERPROFILE}\Desktop\manish\05-11-15\winstaller\{#IMAGEMAGIC}"; DestDir: "{app}"; AfterInstall: RunOtherInstaller
Source: "{#USERPROFILE}\Desktop\manish\05-11-15\winstaller\{#MyAppIcon}"; DestDir: "{app}"; Flags: ignoreversion
Source: "{#USERPROFILE}\Desktop\manish\05-11-15\{#MyAppShortName}\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs
; NOTE: Don't use "Flags: ignoreversion" on any shared system files         

[Code]
procedure RunOtherInstaller;
var
  ResultCode: Integer;
begin
  if not Exec(ExpandConstant('{app}\{#IMAGEMAGIC}'), '', '', SW_SHOWNORMAL,
    ewWaitUntilTerminated, ResultCode)
  then
    MsgBox('Other installer failed to run!' + #13#10 +
      SysErrorMessage(ResultCode), mbError, MB_OK);
end;

[Icons]
Name: "{commonprograms}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; IconFilename: "{app}\{#MyAppIcon}"

; Here's an example of how you could use a start menu item for just Chrome, no batch file
;Name: "{group}\{#MyAppName}"; Filename: "{pf32}\Google\Chrome\Application\chrome.exe"; Parameters: "--app=http://localhost:5566 --user-data-dir=%APPDATA%\{#MyAppShortName}\"; IconFilename: "{app}\{#MyAppIcon}"


[Run]
; postinstall launch
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: shellexec postinstall skipifsilent runhidden

; These all run with 'runascurrentuser' (i.e. admin) whereas 'runasoriginaluser' would refer to the logged in user
; Install Node
Filename: "{sys}\msiexec.exe"; Parameters: "/passive /i ""{app}\{#NODE}""";

; Add Firewall Rules
Filename: "{sys}\netsh.exe"; Parameters: "advfirewall firewall add rule name=""Node In"" program=""{pf}\nodejs\node.exe"" dir=in action=allow enable=yes"; Flags: runhidden;
Filename: "{sys}\netsh.exe"; Parameters: "advfirewall firewall add rule name=""Node Out"" program=""{pf}\nodejs\node.exe"" dir=out action=allow enable=yes"; Flags: runhidden;

; Add System Service
;Filename: "{app}\{#NSSM}"; Parameters: "install {#MyAppShortName} ""{pf64}\nodejs\node.exe"" ""{app}\app.js"" ""5566"""; Flags: runhidden;
;Filename: "{sys}\net.exe"; Parameters: "start {#MyAppShortName}"; Flags: runhidden;
;Filename: "{pf64}\nodejs\node.exe"; Parameters: "{app}\bin\windows-service-installer.js install"; Flags: runhidden;
;Filename: "{sys}\net.exe"; Parameters: "start {#MyAppLCShortName}"; Flags: runhidden;


[UninstallRun]
; Removes System Service
Filename: "{sys}\net.exe"; Parameters: "stop {#MyAppShortName}"; Flags: runhidden;
Filename: "{app}\{#NSSM}"; Parameters: "remove {#MyAppShortName} confirm"; Flags: runhidden;
Filename: "{pf}\{#IMAGEMAGIC}"; Parameters: "remove {#IMAGEMAGIC}"; Flags: runhidden;
Filename: "{sys}\net.exe"; Parameters: "stop {#MyAppLCShortName}"; Flags: runhidden;
Filename: "{pf}\nodejs\node.exe"; Parameters: "{app}\bin\windows-forever.js"; Flags: runhidden;
Filename: "{pf}\nodejs\node.exe"; Parameters: "{app}\bin\windows-service-installer.js remove"; Flags: runhidden;

; Remove Firewall Rules
Filename: "{sys}\netsh.exe"; Parameters: "advfirewall firewall delete rule name=""Node In"" program=""{pf}\nodejs\node.exe"""; Flags: runhidden;
Filename: "{sys}\netsh.exe"; Parameters: "advfirewall firewall delete rule name=""Node Out"" program=""{pf}\nodejs\node.exe"""; Flags: runhidden;


; Uninstall Node
Filename: "{sys}\msiexec.exe"; Parameters: "/passive /x ""{app}\{#NODE}""";

; Remove all leftovers
Filename: "{sys}\rmdir"; Parameters: "-r ""{app}""";
